version: '3.5'

services:
  mongo:
    image: mongo
    restart: unless-stopped
    volumes:
      - meteo_mongo_db:/data/db

  web:
    build: frontend/
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "80"]
    ports:
      - "8040:8040"
      - "8041:8041"
    environment:
      - TZ="Europe/Berlin"
    volumes:
      - ${PWD}/frontend/caddy/dev/Caddyfile:/etc/Caddyfile
      - pushpreview:/pushpreview
      - sslstore:/root/.caddy

  app:
    build: backend/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5000"]
    environment:
      - TZ="Europe/Berlin"
      - DB_CONN="mongodb://mongo:27017/"
    depends_on:
      - mongo
      - web
      - mq

  datasource:
    build: backend/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5000"]
    environment:
      - TZ="Europe/Berlin"
    depends_on:
      - mq

  mq:
    image: rabbitmq:3-alpine
    restart: unless-stopped
    volumes:
      - mqdata:/var/lib/rabbitmq

  dwd:
    build: backend/dwd
    restart: unless-stopped
    environment:
      - TZ="Europe/Berlin"
      - DB_CONN="mongodb://mongo:27017/"
    volumes:
      - dwd:/data
      - pushpreview:/pushpreview
    tmpfs:
      - /scratch
      - /forecast
    depends_on:
      - app
      - mongo

  tileserver:
    build: tileserver-gl-meteocool
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "80"]
    environment:
      - TZ="Europe/Berlin"
    volumes:
      - dwd:/data
      - ${PWD}/tileserver-gl-meteocool/config:/etc/ts
    depends_on:
      - web

volumes:
  dwd:
  meteo_mongo_db:
  sslstore:
  pushpreview:
  mqdata:
